# CS/ 네트워크 
> TCP / IP 이해하는 것이 목표
> - 박은빈에 대해 공부해야지 연예인에 대해 공부하면 재미가 없다. 
> 목적은 현실적인 것이다.  많은 연예인을 다 공부하면 연예인을 거꾸러 도출 가능하기에 공부할 수는 있겠지만, 이 공부는 미시적으로 하고 거시로 들어간다. 


## OSI 7 Layer
- Ethernet 2층 (유선넷)
- Internet 3층
- TCP UDP 4층
- HTTP 

> 범용 운영체제는 User mode & Kernel mode 2개가 존재한다. 

## Layer 와 Layered 구조
시스템을 이루는 요소를 정하고, 그 요소와의 관계를 정의하는 것이 설계다. 이 설계를 규정하는 표준 규정(문법)도 있다. 
* 의존적이면서 직렬적인 경우 = Layered다 = 직렬로 되어있다. 
Ex) A 가 존재하기 위해선 B 가 있어야한다. 고등학교를 졸업해야 대학교를 갈 수 있다. 

## “단말 A”와 “단말 B”간의 상호작용(대화) = 네트워크
> 네트워크는 Layered 구조인 규칙(프로토콜)이다. 
- 상호작용(대화)하기 위해선 
- 물리적으로 : 2m 이내에 있어야하고.
- 형식적으로 : 말이나 / 글로 해야하고
- 언어적으로 : 영어나 한글을 써야하고
-> 각 계층별로 이렇게 물리가 되어야만 형식을 논할 수가 있다. 

## 유저모드 와 커널모드(OS)
NIC(랜카드)를 사서 컴퓨터에 장착했다. 
커널모드와 유저모드는 신계와 인간계다. 우리가 보는 건 유저모드 인간계이지만, 커널모드는 신계임. 
TCP/ IP 를 추상하화한 것을 소켓이라고 함.
소켓을 한마디로 말하자면, 신계를 인간계로 보내기 위한 파일임.  
- 드라이버 레벨 ( Physical + Data Link) …네트워크 접속을 위한 하드웨어관점 (1,2)
- IP (3층 커널 모드 = 네트워크레벨) … Internet
- TCP& UDP(4층 커널 모드의 마지막 = 실제 전송 레벨) … host to host
- 유저모드(5,6,7) … App 커널모드는 OS 운영체제이다. 

> 기억할 것! 소켓은 일종의 file이다. 어떤 유저의 프로세스가 소켓을 열었다 닫았다. -> 파일을 열었다 닫았다와 동일함. 
[image:3E79579C-100F-43C8-B617-AB500114FC02-16569-000000CF4FC58EE2/65BFFD36-484A-48C7-9408-E52214BF2941.png]
### 각 계층의 식별자를 기억하자. 
해당 대상 개념 계층의 식별자
1. MAC 주소 = 이더넷 (레벨2) = 물리적 주소
-> LAN카드에 붙는다. 하나의 컴퓨터에 랜카드가 3개 붙어있으면 맥주소 3개
2. IP 주소 = 인터넷(레벨3)
-> 호스트의 식별자이다. 
3. 포트번호 = TCP/IP (레벨4)
> L2 계층 종사자에게 포트번호란? 인터페이스 식별자임..
> 웹 종사자 서비스 계발자


### Host는 이렇게 암기하자. 
> 호스트는 인터넷에 연결된 컴퓨터. 딱 이렇게 외우면 된다. 
> 컴퓨터 내부의 코드(클라이언트/서버) + 교통정리해주는 라우터

호스트를 굳이 나누면 2개임. 
네트워크 그 자체를 이루는 호스트를 switch라고 함. (인프라)
네트워크 이용주체 (End-point    단말기) 

호스트 = (1) 이용주체인 단말기(클라이언트와 서버)  + (2) 네트워크 그 자체인 스위치(라우터)

> 스위치 = 라우터 (교통정리해주는 우체국)
> 	패킷(데이터 상자)가 돌아다니다가 우체국 교통정리 받아서 돌아다님

* 고민해봐야할 점은 비용이다!! 비용 = 매트릭 값
> 패킷이 길을 돌아다닐 때 도로에 따라 돈을 내고 돌아다닌다. 

> L2 스위치 = 공유기  L3  스위치 = 라우터
> 하드웨어 상 우체국은 공유기같은 랜카드이고
> 소프트웨어 상 우체국은 라우터이다. 
> End-point 단말과 직접 연결되어 있는 스위치(Mac주소를 근거로 스위칭)
> 
***


## 랜카드 = NIC (Network Interface Card) 하드웨어
* 무선 랜카드가 있는데, 유선 랜선 연결하면 랜카드가 2개가 되는 거지. 
* 지극히 하드웨어 용어다. 

- 랜카드는 연결되면 Link-Up이라고 하고, 다운되면 Link-Down이라고 한다. 

L2 스위치를 위한 스위치 = VLAN  (Distribution Switch) 
스위치(랜카드)를 통제하기 위한 스위치

[image:6ACD0D63-2CB2-487D-B310-1654A1FEFA66-16569-000000DA7162DD7A/C38771FD-D8AE-4812-8D47-D385AEFECD66.png]
> Broadcasting은 최소화해야한다. 
> header= 택배의 송장임(누가, 어디로 보낸다) 

> 하드웨어 용어 = 물리적 용어 / 소프트웨어 용어 = 논리적 용어(가상)
매우매우 중요하다. 

* CPU = 머신
* 물리적인 cpu를 가상화(논리적으로 구현)하는 것이 Virtual Machine
* LAN = 물리적인 용어로 설명이 된다. (레벨 1, 2)
* 물리적으로 포트 회선을 꽂았냐? 

* WAN과 인터넷 = 소프트웨어 용어로 설명이 된다. (레벨 3~ 7)
* 인터넷은 논리적인 네트워크다.
* WAN은 가상화된 LAN이다. 

랜카드는 물리적 용어이다. 
***

## IPv4 주소 (레벨3 - 소프트웨어 ) 
> IP 주소의 핵심은 32 비트 (8비트가 4개 있다)
> 8비트는 2의 8승(256가지 경우의 수)

A.B.C.D
A —> 0~255 까지 들어갈 수 있다. 
예를 들어
> 0.0.0.0 부터 255.255.255.255 까지 있다. 

근데, A.B.C까지가 광역 네트워크 ID 주소이고
D는 호스트 ID 주소이다. 

서울시 강남구 역삼동 (A, B, C)
38번지(D)

* 이게 왜 중요하냐? 택배를 보낼 때 역삼동에 갈 택배릃 한 번에 모아서 보내잖아?
* 즉, A,B,C는 한번에 모아서 보고 그 다음에 같이 가서 D를 찾아서 가는 구조이다. 


### Subnet Mask 서브넷 마스크 : 옛날방식
> A,B,C를 보고 우리 동네로 오는구나를 판단하는 것은 서브넷 마스크다. 
- 다만, 이 방식은 문제가 계속 AND 조건으로 쿼리해야한다는 단점이 있다. 

### CIDR : 지금방식 (지엽적)
A,B,C,D / 24
Ex) 192.168.0.14/24 이런식으로 표기함. 

## broadcast IP 
> 말 그대로 방송에서 알 수 있듯, 전체에 다 보낼 때 를 broadcast이다. 

네이버(3.3.3.3) 특정 ip에 데이터를 보내려고 하면 이는 매우 효율적이다. 특정 ip로 보내는 것이기 때문에 고속도로 타고 가다가 딱 목적지 gateway에서 알아서 올려 보내준다. 
반면, broadcastip(xxx.xxx.xxx.255) 이런식으로 보내면 모든 곳에 다 이 정보를 뿌리게 되는셈이다. 게이트웨이에 닿기 전까지 말이지. 
링크가 업링크로 올라갈 때 다 업링크 까지 싹 물어본단 말야…업링크가 뭐냐고? 저 사진 아래에 있는 가운데 교차로에 있는 것…

개념이 이해가 되엇따면 형식은 뭘까?
보통 IP는 255를 쓰지 않는다. 255로 끝나면 이는 방송 IP 이다. 


Cf. 비슷한 의미에서  XXX.XXX.XXX.0 0으로 끝나는 것도 쓸 수 없다. 
이유가 뭐냐면, 해당 IP는 Subnet IP와 일치하기 때문이다. 서브넷 IP랑 동일하게 보내진 않는다. 
Gateway도 1번으로 끝난다. 

> 그래서 현실적으로 호스트는 256개가 아니라 253개를 쓸 수 있다는 말이 여기서 나온다. 
[image:52E40646-B46E-4E2F-A644-B4A267BDC7E5-16569-000000F7D95F741F/88C54754-2F74-4B9D-A67B-89143308BC2D.png]



## localhost IP (host 자기 자신을 가리키는 주소) 127.0.0.1
> 이를 loop back host : 나 스르로를 가리키는 주소이다. 

내 아이피가 192.168.0.10 이라고 치자. 

[image:4D4872A4-87D0-4801-8AF2-25587005ED31-16569-000000FA02454564/08691C3E-0D75-438F-8400-54229A228886.png]
<빨간줄 이 바로 localhost의 개념이다>

localhost는 드라이버로 안내려간다. 
프로세스간 통신 (IPC ) 에서 쓰인다. 



***


## 패킷 = 네트워크 세계의 택배상자 (단위 데이터) …L3 Packet

> Packet 나오면 L3 Packet 이다. IP 주소와 동급이다. 

최대 크기는 MTU (Header / Payload)까지 1500바이트(1.4kb)

그럼 이건 너무 작은데?  맞아. 너무 작지. 

### 패킷 - 구조(2가지)
> 헤더와 페이로드로 구성되어있다. 
> 다시 말해 헤더와 바디로 구성되어있다. Header & Body
> Header 핵심! = 택배 송장(전 누군데 어디 우체국으로 보내주세요)
> Body 핵심! = 실제 데이터

### 패킷 - Encapsulation(택배를 포장하는 기술) & Decapsulation - Parsing(택배 푸는 기술)
> 단위화가 핵심!
> <배열 안에 배열이 들어있네/…> —> 패킷 Encapsulation
> 패킷 안에 패킷이 있고, JSON 안에 JSON 이 있네…

> 조금 더 심화하자면, OSI 레벨이 올라갈수록 택배가 포장되는 Encapsulation이고, OSI 레벨이 낮아질수록 택배가 열리는 Decapsulation Parsing 작업이다. 
> 패킷이 계층이 올라갈수록 포장이 되고 내려갈수록 포장이 열리겠지(너무나도 당연하다)

### 패킷의 생성, 전달, 소멸 = 택배전달

Gateway = 문지기

Header 송장에는 크게 2가지! 주소와 이름(포트번호)을 적어야한다. 
-> 주소는 ip 주소이다. 

 
[image:00547B17-8A7C-4502-8DCF-245B8E42BF32-16569-000000EA48112F05/8323C39B-75A2-4933-A9AE-113B056CFEAD.png]
TCP - Segment. / IP - Packet / Socket - Stream

> 클라이언트에서 받은 요청이나 정보는 Stream이라고 한다. 문제는 이게 신계에서 읽기엔 너무 긴 거다!!  그래서, 내려가면서 소켓에서 TCP로 넘어갈 때 분할이 일어난다. (세그먼트화)
> 소켓과 스트림은 따라 다니는 단어다. Socket에서 Stream 이 나가는 것이다. 


***

# TCP와 IP (매우매우매우 중요)

“ 파리에서 에펠탑을 택배로 보내려면? “ 

* 패킷은 1.4mb가 최대라서 세상에 너무 작다… 그래서 패킷을 그냥 보내지 않고, 택배를 택배트럭에 담아서 한번에 보낸다. (버퍼)
* 옛날에 P2P에서 uTorrent(토렌트)로 보낼 때 버퍼 하나하나 이렇게 보내는 거랑 비슷해. 
* 버퍼 = 소켓 I/O (스트림)  -> 이 Stream은 TCP를 만나서 segment 쪼개지게 되는 것이다.  (즉, 택배 상하차)

그래! TCP는 택배트럭을 상하차 하는 작업니다. I/O (In out) 상하차

* 사실 근데, 이 택배트럭이 자주 바뀌긴 한다. -> 이 부분은 나중에 자세히 설명한다고 함. 
L2 에서 L3 , L3에서 L4로 계층이 바뀔 때 트럭이 바뀐다는 뜻이더라…


## 보내는 쪽에서는 상대방이 잘 받았는지 확인을 해본다. (Await Acknowledgement)
Buffer를 한번에 보내기 보다는…패킷 1, 2를 버퍼에 담아서 보냈는데… 상대방이 Ack #3 을 다시 돌려 보내면… 잘 받았구나 싶어서 패킷 3, 4,5 등을 보낸다. 

### 4가지 네트워크 이슈) loss / ack-duplicated
> 근데, 만약 잘 못 받았다고 그러면? Loss 가 생기면?  아예 잃어버린 경우? - loss
> 응답이 너무 늦거나 없어서 다시 보냈는데 사실 받은 거였어… 그냥 시간 차이가 있던 거라면?  그럼 패킷이 중복되잖아!!- duplicated
> 수신하는 쪽에서 1,2 ,4,5 는 받았는데 3번 패킷이 없다면? - Out of order (-> 네트워크 문제)
> 여유공간의 메모리 크기가 작다면,  end point 단말 단계에서 - Zero window (-> 프로그램 문제 )

Solution : 커널 모드에서 해결해야한다. 

> fragment가 된다는 것은 패킷 최대 크기보다 작게 담겼다면, 잘라내야죠. (Fragment)


## IPv4 헤더 형식
8비트 =1 바이트 

 


***



## 인터넷이란 뭐냐 = “라우터의 집합체”라고 할 수 있는 “논리” 네트워크이다. 

> 라우터 vs L3 스위치 를 비교하는 사람도 있지만, 별 의미가 없다고 보고 라우터 = L3 스위치라고 그냥 생각하자.

Internet 의 핵심 요소를 나눠보자!
## Internet 은 딱 2개 : 라우터 + DNS

## TTL (텔로미어랑 똑같다) & 단편화(히잉 너무 커…!)
> TTL = 수명 // 단편화 = 힝…너무 커!! 쪼갤래…
* 텔로미어가 완전히 짧아지면 죽듯… 패킷도 라우터를 따라서 돌아다니지만, 사실 수명이 있다. 오 수명을 두냐면, 만약 패킷들이 목적지에 어떠한 연유로 못 가고 둥둥 돌아다니면 목적지로 못 가서 좀비가 되어버린다. 좀비패킷 -> 서버가 다운되어버린다. 그래서, 텔로미어는 패킷의 수명이다. 

* 단편화는 앞서 말했듯(fragration)은 MTU 크기 차이로 생기고…
단편화는 각 단계로 넘어갈 때 수용할 수 있는 MTU(최대 크기)가 차이가 있으면 그 때 쪼개진다. 
예를 들어, 1500이라는 사이즈로 보냈는데, 1400까지밖에 못 받으면, 쪼개야지 뭐 돌려보내겠냐? 상식적으로? 나는 1400 아니면 안 받음.ㅇㅇ 알아서 하셈. 그러겠냐고ㅋㅋㅋㅋ
 그게 단편화임. 별 거 아님. 
그럼 조립은 누가함? 수신하는 놈이 하겠지. ㄹㅇ임. 

> 사실 근데  단편화 안되게 보내주는 게 제일 좋지 뭐…

[image:91168483-2409-42A2-BA00-F4ACBFD2CCD5-16569-000000FEDDC5DB5A/D1F7FAB1-EE77-4446-B11A-47ADC04EE89A.png]



## 인터넷 사용 전에 해야할 자동설정 DHCP
> 자동으로 인터넷 설정을 해준다. DHCP// 내가 사용할 IP 주소를 서버가 알려준다. Dynamic Host Configuration Protocol …Dynamic = Runtime런타임
> 





***






















